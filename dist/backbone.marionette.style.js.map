{"version":3,"sources":["backbone.marionette.style.js"],"names":[],"mappings":"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","file":"backbone.marionette.style.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone.marionette')) :\n  typeof define === 'function' && define.amd ? define(['backbone.marionette'], factory) :\n  global.Backbone.Marionette.StyleBehavior = factory(global.Marionette)\n}(this, function (Marionette) { 'use strict';\n\n  const isUnitlessNumber = {\n    animationIterationCount: true,\n    boxFlex: true,\n    boxFlexGroup: true,\n    boxOrdinalGroup: true,\n    columnCount: true,\n    flex: true,\n    flexGrow: true,\n    flexPositive: true,\n    flexShrink: true,\n    flexNegative: true,\n    flexOrder: true,\n    gridRow: true,\n    gridColumn: true,\n    fontWeight: true,\n    lineClamp: true,\n    lineHeight: true,\n    opacity: true,\n    order: true,\n    orphans: true,\n    tabSize: true,\n    widows: true,\n    zIndex: true,\n    zoom: true,\n\n    // SVG-related properties\n    fillOpacity: true,\n    stopOpacity: true,\n    strokeDashoffset: true,\n    strokeOpacity: true,\n    strokeWidth: true,\n  };\n\n  /**\n  * @param {string} prefix vendor-specific prefix, eg: Webkit\n  * @param {string} key style name, eg: transitionDuration\n  * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n  * WebkitTransitionDuration\n  */\n  function prefixKey(prefix, key) {\n    return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n  }\n\n  /**\n  * Support style names that may come passed in prefixed by adding permutations\n  * of vendor prefixes.\n  */\n  const prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n  // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n  // infinite loop, because it iterates over the newly added props too.\n  Object.keys(isUnitlessNumber).forEach((prop) => {\n    prefixes.forEach((prefix) => {\n      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n    });\n  });\n\n  const msPattern = /^-ms-/;\n\n  function dangerousStyleValue(name, value) {\n    let styleValue = value;\n    const isEmpty = styleValue === null || typeof styleValue === 'boolean' || styleValue === '';\n    if (isEmpty) {\n      return '';\n    }\n\n    const isNonNumeric = isNaN(styleValue);\n    if (isNonNumeric || styleValue === 0 ||\n        isUnitlessNumber.hasOwnProperty(name) &&\n        isUnitlessNumber[name]) {\n      return '' + styleValue;\n    }\n\n    if (typeof styleValue === 'string') {\n      styleValue = styleValue.trim();\n    }\n\n    return value + 'px';\n  }\n\n  const _uppercasePattern = /([A-Z])/g;\n\n  /**\n  * Hyphenates a camelcased string, for example:\n  *\n  *   > hyphenate('backgroundColor')\n  *   < \"background-color\"\n  *\n  * For CSS style names, use `hyphenateStyleName` instead which works properly\n  * with all vendor prefixes, including `ms`.\n  *\n  * @param {string} string\n  * @return {string}\n  */\n  function hyphenate(string) {\n    return string.replace(_uppercasePattern, '-$1').toLowerCase();\n  }\n\n  function hyphenateStyleName(string) {\n    return hyphenate(string).replace(msPattern, '-ms-');\n  }\n\n  /**\n  * Memoizes the return value of a function that accepts one string argument.\n  *\n  * @param {function} callback\n  * @return {function}\n  */\n  function memoizeStringOnly(callback) {\n    const cache = {};\n    return (string) => {\n      if (!cache.hasOwnProperty(string)) {\n        cache[string] = callback.call(this, string);\n      }\n\n      return cache[string];\n    };\n  }\n\n  const processStyleName = memoizeStringOnly((styleName) => {\n    return hyphenateStyleName(styleName);\n  });\n\n  /**\n  * Serializes a mapping of style properties for use as inline styles:\n  *\n  *   > createMarkupForStyles({width: '200px', height: 0})\n  *   \"width:200px;height:0;\"\n  *\n  * Undefined values are ignored so that declarative programming is easier.\n  * The result should be HTML-escaped before insertion into the DOM.\n  *\n  * @param {object} styles\n  * @param {ReactDOMComponent} component\n  * @return {?string}\n  */\n  const createMarkupForStyles = (styles, component) => {\n    let serialized = '';\n    for (let styleName in styles) {\n      if (styles.hasOwnProperty(styleName)) {\n        const styleValue = styles[styleName];\n        if (styleValue !== null) {\n          serialized += processStyleName(styleName) + ':';\n          serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n        }\n      }\n    }\n\n    return serialized || null;\n  };\n\n  var StyleBehavior = Marionette.StyleBehavior = Marionette.Behavior.extend({\n    initialize() {\n      if (typeof this.view.style === 'function') {\n        this.view.style = this.view.style.call(this.view);\n      }\n\n      const css = createMarkupForStyles(this.view.style);\n      this.view.attributes = {\n        'style': css,\n      };\n    },\n  });\n\n  var backbone_marionette_style = StyleBehavior;\n\n  return backbone_marionette_style;\n\n}));\n"],"sourceRoot":"/source/"}